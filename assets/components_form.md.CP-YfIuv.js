import{_ as t,a as d,o as e,ab as o}from"./chunks/framework.uTkN8JXe.js";const u=JSON.parse('{"title":"Form","description":"Form 组件文档","frontmatter":{"title":"Form","description":"Form 组件文档","prev":{"link":"components/tooltip","text":"Tooltip 文字提示"},"next":false},"headers":[],"relativePath":"components/form.md","filePath":"components/form.md"}'),a={name:"components/form.md"},r=o('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>🚧 组件库更新通知 🚧</strong>：我们正在努力完善我们的组件库。</p></div><h1 id="form-表单" tabindex="-1">Form 表单 <a class="header-anchor" href="#form-表单" aria-label="Permalink to &quot;Form 表单&quot;">​</a></h1><p>表单目前包含 输入框, 下拉选择, 开关 等用户输入的组件。 使用表单，您可以收集、验证和提交数据。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>ps: 表单控件目前不全，待完善</p></div><h2 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h2><p>最基础的表单包括各种输入表单项，比如<code>input</code>、<code>select</code>、<code>switch</code>等。(目前只开发了这三个 🤣) 在每个 <code>from</code> 组件中，需要使用 <code>from-item</code> 组件来包裹每个表单项,用于获取值与校验。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>🔨 <strong>施工中</strong>：我们的团队正在全力以赴，以确保为您提供最高质量的组件。请稍后再来查看这些组件的最新进展。</p></div><h2 id="对齐方式" tabindex="-1">对齐方式 <a class="header-anchor" href="#对齐方式" aria-label="Permalink to &quot;对齐方式&quot;">​</a></h2><p>通过 <code>label-position</code> 属性可以控制表单项的左右对齐方式。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>🔨 <strong>施工中</strong>：我们的团队正在全力以赴，以确保为您提供最高质量的组件。请稍后再来查看这些组件的最新进展。</p></div><h2 id="表单校验" tabindex="-1">表单校验 <a class="header-anchor" href="#表单校验" aria-label="Permalink to &quot;表单校验&quot;">​</a></h2><p>通过 <code>rules</code> 属性可以设置表单项的校验规则。书写规则参考 <a href="https://github.com/yiminghe/async-validator" target="_blank" rel="noreferrer">async-validator</a>。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>🔨 <strong>施工中</strong>：我们的团队正在全力以赴，以确保为您提供最高质量的组件。请稍后再来查看这些组件的最新进展。</p></div><h2 id="自定义校验规则" tabindex="-1">自定义校验规则 <a class="header-anchor" href="#自定义校验规则" aria-label="Permalink to &quot;自定义校验规则&quot;">​</a></h2><p>通过校验规则中的 <code>validator</code> 属性可以自定义校验规则。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>🔨 <strong>施工中</strong>：我们的团队正在全力以赴，以确保为您提供最高质量的组件。请稍后再来查看这些组件的最新进展。</p></div><h2 id="form-api" tabindex="-1">Form API <a class="header-anchor" href="#form-api" aria-label="Permalink to &quot;Form API&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>model</td><td>表单数据</td><td><code>Record&lt;string, any&gt;</code></td><td>-</td></tr><tr><td>rules</td><td>校验规则</td><td><code>FormRules</code></td><td>-</td></tr><tr><td>disabled</td><td>是否禁用表单</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td>label-position</td><td>标签位置</td><td><code>enum</code>- <code>&#39;left&#39; | &#39;top&#39;| right&#39;</code></td><td>right</td></tr><tr><td>label-width</td><td>标签宽度</td><td><code>number</code></td><td>-</td></tr><tr><td>label-suffix</td><td>标签后缀</td><td><code>string</code></td><td>-</td></tr><tr><td>show-message</td><td>是否显示提示</td><td><code>boolean</code></td><td>true</td></tr><tr><td>hide-required-asterisk</td><td>是否隐藏必填符号</td><td><code>boolean</code></td><td>false</td></tr><tr><td>required-asterisk-position</td><td>必填符号位置</td><td><code>enum</code>-<code>&#39;left&#39; | &#39;right&#39;</code></td><td><code>right</code></td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>validate</td><td>验证表单项校验后触发</td><td><code>(prop: FormItemProps, isValid: boolean, message: string ) =&gt; void</code></td></tr></tbody></table><h3 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Sub Component</th></tr></thead><tbody><tr><td>default</td><td>默认插槽</td><td>FormItem</td></tr></tbody></table><h3 id="expose" tabindex="-1">Expose <a class="header-anchor" href="#expose" aria-label="Permalink to &quot;Expose&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>validate</td><td>校验表单项</td><td><code>() =&gt; Promise&lt;boolean&gt;</code></td></tr><tr><td>validateField</td><td>校验指定表单项</td><td><code>(props?: string[],callback?:(isValid:boolean,invalidFields?: ValidateFieldsError)) =&gt; Promise&lt;boolean&gt;</code></td></tr><tr><td>resetFields</td><td>重置表单项</td><td><code>(props?: string[]) =&gt; void</code></td></tr><tr><td>clearValidate</td><td>清除校验状态</td><td><code>(props?: string[]) =&gt; void</code></td></tr></tbody></table><h2 id="formitem-api" tabindex="-1">FormItem API <a class="header-anchor" href="#formitem-api" aria-label="Permalink to &quot;FormItem API&quot;">​</a></h2><h3 id="props-1" tabindex="-1">Props <a class="header-anchor" href="#props-1" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>prop</td><td>表单域 model 字段</td><td><code>string</code></td><td>-</td></tr><tr><td>label</td><td>标签文本</td><td><code>string</code></td><td>-</td></tr><tr><td>label-width</td><td>标签宽度，例如 &#39;50px&#39;</td><td><code>string|number</code></td><td>-</td></tr><tr><td>disabled</td><td>是否禁用表单域</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td>required</td><td>是否必填，如不设置，则会根据校验规则自动生成</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td>show-message</td><td>是否显示校验错误信息</td><td><code>boolean</code></td><td><code>true</code></td></tr><tr><td>error</td><td>错误提示文案，如不设置，则会从校验规则的 message 属性中获取</td><td><code>string</code></td><td>-</td></tr><tr><td>rules</td><td>校验规则</td><td><code>FormItemRule[]</code></td><td>-</td></tr></tbody></table><h3 id="slots-1" tabindex="-1">Slots <a class="header-anchor" href="#slots-1" aria-label="Permalink to &quot;Slots&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>default</td><td>默认插槽</td><td>-</td></tr><tr><td>label</td><td>label 插槽</td><td><code>{label:string}</code></td></tr><tr><td>error</td><td>错误提示文案插槽</td><td><code>{error:string}</code></td></tr></tbody></table><h3 id="expose-1" tabindex="-1">Expose <a class="header-anchor" href="#expose-1" aria-label="Permalink to &quot;Expose&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>validateStatus</td><td>校验状态</td><td><code>Ref&lt;ValidateStatus&gt;</code> - <code>&#39;success&#39; | &#39;error&#39; | &#39;validating&#39; | &#39;init&#39;</code></td></tr><tr><td>validateMessage</td><td>校验信息</td><td><code>Ref&lt;string&gt;</code></td></tr><tr><td>validate</td><td>校验表单项</td><td><code>(trigger: string,callback?: (valid: boolean,invalidFields?: ValidateFieldsError) =&gt; void) =&gt; Promise&lt;boolean&gt;</code></td></tr><tr><td>resetField</td><td>重置表单项</td><td><code>() =&gt; void</code></td></tr><tr><td>clearValidate</td><td>清除校验结果</td><td><code>() =&gt; void</code></td></tr></tbody></table>',32),l=[r];function s(i,c,h,n,p,b){return e(),d("div",null,l)}const g=t(a,[["render",s]]);export{u as __pageData,g as default};
