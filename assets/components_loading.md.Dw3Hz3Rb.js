import{_ as t,a,o as i,ab as s}from"./chunks/framework.uTkN8JXe.js";const u=JSON.parse('{"title":"Loading","description":"Loaidng 组件文档","frontmatter":{"title":"Loading","description":"Loaidng 组件文档","next":{"link":"components/message","text":"Message 消息提示"},"prev":{"link":"components/alert","text":"Alert 提示"}},"headers":[],"relativePath":"components/loading.md","filePath":"components/loading.md"}'),e={name:"components/loading.md"},d=s(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>🚧 组件库更新通知 🚧</strong>：我们正在努力完善我们的组件库。</p></div><h1 id="loading-加载" tabindex="-1">Loading 加载 <a class="header-anchor" href="#loading-加载" aria-label="Permalink to &quot;Loading 加载&quot;">​</a></h1><p>加载数据时显示动效。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>自定义指令 <code>v-loading</code>，只需要绑定 <code>boolean</code> 值即可。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>🔨 <strong>施工中</strong>：我们的团队正在全力以赴，以确保为您提供最高质量的组件。请稍后再来查看这些组件的最新进展。</p></div><h2 id="自定义加载中组件内容" tabindex="-1">自定义加载中组件内容 <a class="header-anchor" href="#自定义加载中组件内容" aria-label="Permalink to &quot;自定义加载中组件内容&quot;">​</a></h2><p>在绑定了 <code>v-loading</code> 指令的元素上添加 <code>element-loading-text</code> 属性，其值会被渲染为加载文案，并显示在加载图标的下方。 类似地， <code>element-loading-spinner</code>、<code>element-loading-background</code> 属性分别用来设定 加载图标、背景色值。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>🔨 <strong>施工中</strong>：我们的团队正在全力以赴，以确保为您提供最高质量的组件。请稍后再来查看这些组件的最新进展。</p></div><h2 id="全屏加载" tabindex="-1">全屏加载 <a class="header-anchor" href="#全屏加载" aria-label="Permalink to &quot;全屏加载&quot;">​</a></h2><p>当使用指令方式时，全屏遮罩需要添加<code>fullscreen</code>修饰符（遮罩会插入至 body 上） 此时若需要锁定屏幕的滚动，可以使用<code>lock</code>修饰符； 当使用服务方式时，遮罩默认即为全屏，无需额外设置。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>🔨 <strong>施工中</strong>：我们的团队正在全力以赴，以确保为您提供最高质量的组件。请稍后再来查看这些组件的最新进展。</p></div><h2 id="服务方式调用" tabindex="-1">服务方式调用 <a class="header-anchor" href="#服务方式调用" aria-label="Permalink to &quot;服务方式调用&quot;">​</a></h2><p>服务方式调用，可以自定义遮罩的文案，也可以通过 <code>close</code> 方法关闭。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { kawaLoading } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;kawa-ui&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>需要的时候通过以下方式调用</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">kawaLoading.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options);</span></span></code></pre></div><p>LoadingService 会返回一个 Loading 实例，可通过调用该实例的 close 方法来关闭它</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> loading</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kawaLoading.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nextTick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  loading.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>以服务的方式调用的全屏 Loading 是单例的。 若在前一个全屏 Loading 关闭前再次调用全屏 Loading，并不会创建一个新的 Loading 实例，而是返回现有全屏 Loading 的实例</p></div><h2 id="loading-api" tabindex="-1">Loading API <a class="header-anchor" href="#loading-api" aria-label="Permalink to &quot;Loading API&quot;">​</a></h2><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>target</td><td>遮罩绑定的目标元素</td><td><code>HTMLElement</code></td><td>document.body</td></tr><tr><td>fullscreen</td><td>是否为全屏遮罩</td><td><code>boolean</code></td><td>true</td></tr><tr><td>lock</td><td>是否锁定屏幕滚动</td><td><code>boolean</code></td><td>false</td></tr><tr><td>text</td><td>加载文案</td><td><code>string</code></td><td>--</td></tr><tr><td>spinner</td><td>加载图标</td><td><code>string</code></td><td>--</td></tr><tr><td>background</td><td>遮罩背景色</td><td><code>string</code></td><td>--</td></tr></tbody></table><h3 id="directive" tabindex="-1">Directive <a class="header-anchor" href="#directive" aria-label="Permalink to &quot;Directive&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>v-loading</td><td>是否显示加载动画</td><td><code>boolean</code></td></tr><tr><td>kawa-loading-text</td><td>加载文案</td><td><code>string</code></td></tr><tr><td>kawa-loading-spinner</td><td>加载图标</td><td><code>string</code></td></tr><tr><td>kawa-loading-background</td><td>遮罩背景色</td><td><code>string</code></td></tr></tbody></table>`,25),o=[d];function n(l,p,c,r,h,k){return i(),a("div",null,o)}const b=t(e,[["render",n]]);export{u as __pageData,b as default};
