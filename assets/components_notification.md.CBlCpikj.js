import{_ as t,a as o,o as a,ab as e}from"./chunks/framework.uTkN8JXe.js";const b=JSON.parse('{"title":"Notification","description":"Notification 组件文档","frontmatter":{"title":"Notification","description":"Notification 组件文档","next":{"link":"/components/popconfirm","text":"PopConfirm 气泡确认框"},"prev":{"link":"/components/messagebox","text":"MessageBox 消息弹出框"}},"headers":[],"relativePath":"components/notification.md","filePath":"components/notification.md"}'),d={name:"components/notification.md"},i=e('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>🚧 组件库更新通知 🚧</strong>：我们正在努力完善我们的组件库。</p></div><h1 id="notification-通知" tabindex="-1">Notification 通知 <a class="header-anchor" href="#notification-通知" aria-label="Permalink to &quot;Notification 通知&quot;">​</a></h1><p>悬浮出现在页面角落，显示全局的通知提醒消息。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>🔨 <strong>施工中</strong>：我们的团队正在全力以赴，以确保为您提供最高质量的组件。请稍后再来查看这些组件的最新进展。</p></div><h2 id="不同类型的通知" tabindex="-1">不同类型的通知 <a class="header-anchor" href="#不同类型的通知" aria-label="Permalink to &quot;不同类型的通知&quot;">​</a></h2><p>提供了四种不同类型的提醒框：<code>success</code>、<code>warning</code>、<code>info</code> 和 <code>error</code> (danger 效果和 error 相同)。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>🔨 <strong>施工中</strong>：我们的团队正在全力以赴，以确保为您提供最高质量的组件。请稍后再来查看这些组件的最新进展。</p></div><h2 id="隐藏关闭按钮" tabindex="-1">隐藏关闭按钮 <a class="header-anchor" href="#隐藏关闭按钮" aria-label="Permalink to &quot;隐藏关闭按钮&quot;">​</a></h2><p>可以通过设置 <code>closable</code> 属性来隐藏关闭按钮。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>🔨 <strong>施工中</strong>：我们的团队正在全力以赴，以确保为您提供最高质量的组件。请稍后再来查看这些组件的最新进展。</p></div><h2 id="全局方法" tabindex="-1">全局方法 <a class="header-anchor" href="#全局方法" aria-label="Permalink to &quot;全局方法&quot;">​</a></h2><p>通过全局方法 <code>$notify</code> 调用，可以弹出通知。</p><h2 id="单独引用" tabindex="-1">单独引用 <a class="header-anchor" href="#单独引用" aria-label="Permalink to &quot;单独引用&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { kawaNotification } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;kawa-ui&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="notification-api" tabindex="-1">Notification API <a class="header-anchor" href="#notification-api" aria-label="Permalink to &quot;Notification API&quot;">​</a></h2><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>title</td><td>标题</td><td><code>string</code></td><td>-</td></tr><tr><td>message</td><td>通知正文内容</td><td><code>string | VNode</code></td><td>-</td></tr><tr><td>type</td><td>通知的类型</td><td><code>enum</code> - <code>info | success | warning | error | danger</code></td><td>info</td></tr><tr><td>icon</td><td>自定义图标</td><td><code>string</code></td><td>-</td></tr><tr><td>duration</td><td>显示时间</td><td><code>number</code></td><td>3000</td></tr><tr><td>showClose</td><td>是否显示关闭按钮</td><td><code>boolean</code></td><td>true</td></tr><tr><td>onClose</td><td>关闭时的回调函数</td><td><code>() =&gt; void</code></td><td>-</td></tr><tr><td>onClick</td><td>点击时的回调函数</td><td><code>() =&gt; void</code></td><td>-</td></tr><tr><td>offset</td><td>偏移</td><td><code>number</code></td><td>20</td></tr></tbody></table><h3 id="handler" tabindex="-1">Handler <a class="header-anchor" href="#handler" aria-label="Permalink to &quot;Handler&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>close</td><td>关闭 Notification</td><td><code>() =&gt; void</code></td></tr></tbody></table>',20),s=[i];function n(c,r,l,h,p,u){return a(),o("div",null,s)}const m=t(d,[["render",n]]);export{b as __pageData,m as default};
